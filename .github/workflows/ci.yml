name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run tests
      run: |
        uv run python -m pytest test/ -v

    - name: Run tests with coverage
      if: matrix.python-version == '3.13'
      run: |
        uv run coverage run -m pytest test/
        uv run coverage xml

    - name: Upload coverage
      if: matrix.python-version == '3.13'
      uses: upload-artifact@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Check code with ruff (informational)
      run: |
        uv run ruff check muller/ test/ || echo "Linting issues found - please review"

    - name: Check code formatting with ruff format (informational) 
      run: |
        uv run ruff format --check muller/ test/ || echo "Formatting issues found - please review"

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.13

    - name: Build package
      run: |
        uv build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
